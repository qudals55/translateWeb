html
  head
    meta(charset='utf-8')
    style
      include chat.css
    script(src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js")
    script(src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js")
    link(rel="stylesheet" href="https://icono-49d6.kxcdn.com/icono.min.css")
    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous")
block content
  h1= title
  script(src='/socket.io/socket.io.js')
  script(src='/js/lib/adapter.js')
  script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js")
  script(src='/js/meeting.js')
  script(src='/js/room.js')
  link(rel='sytlesheet', type='text/css', href='/css/room.css', media='screen')
  style
    #videosWrapper {vertical-aligin : middle;}
  
  div(class="col-md-3 col-sm-3 col-xs-6")   
    a#exit-btn(href='/' class="btn btn-sm animated-button victoria-two"  style="width: 150px; " ) EXIT
    
  .mine2( style=' background-color:none; ')  
    div(class="wrap")
      form#record-form(action='/download' method='get')  
        button(type='submit' class="button1") Chat Record
        
  div(id='wapper')
    section(id="faceCall")
        
          div(class='container')
            div(id='videos')
              div(id='videosWrapper', style='{display: table; width: 100%;}')
                div(id='localVideoWrap', class='videoWrap', style='{ display: table-cell; vertical-align: middle;}')
                  video(class='videoBox', id='localVideo', autoplay)
      
    div.bfaside
      aside    
        div#chat-list
          
          for chat in chats
            if chat.user === user 
              .mine(style='color:' + chat.user)
                if chat.user.length >= 6 
                  div= chat.id.substr(0,3)
                else
                  div= chat.id
                if chat.gif
                  img(src='/gif/' + chat.gif)
                else
                  div(class="b")
                  div= chat.chat
              .blank  
              .clear
            else if chat.user === 'system'
              .system(style="color:black;")
                div= chat.chat
            else 
              .other(style='color:' + chat.user)
                if chat.user.length >= 3 
                  div(id="circle1" style='font-size:15px; background-color:'+chat.user) #{chat.id.substr(0,1)}
                  
                else
                  div(id="circle1" style='background-color:'+chat.user) #{chat.id}
              
                
                if chat.gif
                  img(src='/gif/' + chat.gif)
                else
                  div=chat.id
                  div(class="a")
                  div= chat.chat
              .blank
              .clear
      div( class="iplayout")
          form#chat-form(class="size" action='/chat' method='post' enctype='multipart/form-data')
            input#chat(name='chat' class="leftlayout" placeholder="Type your Message" style="height:7vh; width:82%;  text-indent:5%;")
            button(type='submit' class="rightlayout" style="height:7vh; width:15%; bottom:1%; vertical-align:top; ") 
              div(class="icono-locationArrow") 
              //i(class="fas fa-location-arrow")
              //i(class="fas fa-paper-plane")
              //i(class="far fa-paper-plane")
        
  script(src='/socket.io/socket.io.js')
  script(src='/annyang.js')
  script.
     var socket = io.connect('https://localhost:443/chat', {
     transports: [ 'websocket']
    });
    var doubleSubmitFlag = false;
    var user_lang = #{ findlang };
    var getReviews = ['리뷰 쓰기', 'write a review', 'Write a review'];
    //안양 모듈 실행 setlanguage로 사용자 언어로 변환
      annyang.setLanguage(user_lang.lang);
      annyang.start({ autoRestart: true, continuous: false });
      var recognition = annyang.getSpeechRecognizer();
      var final_transcript = '';
      recognition.interimResults = true;
      recognition.onresult = function(event) {
      var interim_transcript = '';
      final_transcript = '';
      for (var i = event.resultIndex; i < event.results.length; ++i) {
        if (event.results[i].isFinal) {
          final_transcript += event.results[i][0].transcript;
          console.log("final_transcript="+final_transcript);
          //annyang.trigger(final_transcript); //If the sentence is "final" for the Web Speech API, we can try to trigger the sentence
          } else {
          interim_transcript += event.results[i][0].transcript;
          console.log("interim_transcript="+interim_transcript);
        }
      }
      if (getReviews.includes(final_transcript)){
        var isInput = window.prompt("Please comment on our service!"+"");
        if (isInput){
        var reviews = user_lang.id + ' : ' + isInput;
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
        if (xhr.status === 200) {
          isInput = '';
          reviews = '';
        } else {
          console.error(xhr.responseText);
        }
        };
        xhr.open('POST', '/room/chat');
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ reviews: reviews }));
        }
      } else if (final_transcript) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
        if (xhr.status === 200) {
          final_transcript = '';
        } else {
          console.error(xhr.responseText);
        }
        };
        xhr.open('POST', '/room/#{room._id}/chat');
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ chat: final_transcript }));
      }
    };
    // 다른 사용자가 채팅방에 입장 한 경우 
    socket.on('join', function (data) {
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });
    //다른 사람이 채팅방에서 나간 경우
    socket.on('exit', function (data) {
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });
    //채팅방에 채팅이 올라온 경우
    socket.on('chat', function (data) {
      
      var needchat = data.chat.split('=');
      var needindex = needchat.findIndex(function(e){
        return e== user_lang.lang;
      });
      needchat = needchat[needindex+1];
      var div = document.createElement('div');
      //올라온 채팅이 내가 말한 내용이면 우측에 아니면 좌측에 게시
      if (data.user === '#{user}') {
        div.classList.add('mine');
      } 
      else {
        div.classList.add('other');  
        var circle = document.createElement('div');
        circle.classList.add('circle1');
        circle.style.color="white";
        circle.style.backgroundColor= data.user;       
        circle.style.fontSize="15px";
        div.appendChild(circle);
        //긴 닉네임 자르기 
        if(data.id.length >=3){
         circle.innerHTML = data.id.substr(0,1);
        }
        else{
         circle.innerHTML = data.id;
        }
      }
      
      
      //말꼬리 추가 
      //내가 말할때
      if (data.user === '#{user}') {
        var tail1 = document.createElement('div');
        tail1.classList.add('b');
        div.appendChild(tail1);
      }
      //남이 말할때
      else {
        //닉네임 긴 경우가 있으므로 닉네임 표시
        var name = document.createElement('div');
        name.textContent = data.id;
        div.appendChild(name);
        //원에 닉네임 표시
        var tail2 = document.createElement('div');
        tail2.classList.add('a');
        div.appendChild(tail2);
      }
      
      if (needchat) {        
        var chat = document.createElement('div');
        chat.textContent = needchat;
        div.appendChild(chat);
      } 
      else {
        var gif = document.createElement('img');
        gif.src = '/gif/' + data.gif;
        div.appendChild(gif);
      }
      
      div.style.color = data.user;
      document.querySelector('#chat-list').appendChild(div);
      //빈칸 추가
      var oneblank = document.createElement('div');
      oneblank.className="blank";
      div.parentNode.appendChild(oneblank);
      
      var oneclear = document.createElement('div');
      oneclear.className="clear";
      div.parentNode.appendChild(oneclear);
      
      document.querySelector('#chat-list').scrollTop = document.querySelector('#chat-list').scrollHeight;
    });


    document.querySelector('#chat-form').addEventListener('submit', function (e) {
      e.preventDefault();
      if(doubleSubmitFlag==e.target.chat.value) return;
      doubleSubmitFlag = e.target.chat.value;
      if (e.target.chat.value) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
          if (xhr.status === 200) {
            doubleSubmitFlag = '';
            e.target.chat.value = '';
          } else {
            console.error(xhr.responseText);
          }
        };
        xhr.open('POST', '/room/#{room._id}/chat');
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ chat: this.chat.value }));
      }
    });
    
    document.querySelector('#record-form').addEventListener('submit', function (e) {
      e.preventDefault();
      var xhr = new XMLHttpRequest();
      xhr.responseType = 'blob';
      xhr.onload = function () {
        if (xhr.status === 200) {
          var blob = this.response;
          var contentDispo = this.getResponseHeader('Content-Disposition');
          var fileName = 'record.txt';
          saveBlob(blob, fileName);
        } else {
          console.error(xhr.responseText);
          }
        };
  
        xhr.open('GET', '/download/#{room._id}');
        xhr.send();
    });
    function saveBlob(blob, fileName) {
    var a = document.createElement('a');
    a.href = window.URL.createObjectURL(blob);
    a.download = fileName;
    a.dispatchEvent(new MouseEvent('click'));
    };